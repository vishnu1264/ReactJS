{"ast":null,"code":"var _jsxFileName = \"/home/pavan/VISHNU/GIT/ReactJS/Crwn-Clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if product exists in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if found, increment quantity.\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //return new array with modified cart items/ new cart item\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //check if quantity=1, if yes, remove that item from cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } //return back cartitems with matcning cart item with reduced quantity\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cardCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]); //we receive a product when clicked\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount,\n    removeItemFromCart,\n    clearItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cardCount","CartProvider","children","setCartItems","cartCount","setCartCount","newCartCount","reduce","total","value"],"sources":["/home/pavan/VISHNU/GIT/ReactJS/Crwn-Clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n\n    //find if product exists in the cart\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === productToAdd.id\n    );\n\n    //if found, increment quantity.\n    if(existingCartItem){\n        return cartItems.map((cartItem) => \n            cartItem.id === productToAdd.id ?\n            {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n\n    //return new array with modified cart items/ new cart item\n    return [...cartItems, {...productToAdd, quantity:1}];\n}\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n    //find the cart item to remove\n\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === cartItemToRemove.id\n    );\n\n    //check if quantity=1, if yes, remove that item from cart\n\n    if(existingCartItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n    }\n\n    //return back cartitems with matcning cart item with reduced quantity\n\n    return cartItems.map((cartItem) => \n        cartItem.id === cartItemToRemove.id ?\n        {...cartItem, quantity: cartItem.quantity - 1}\n        : cartItem\n    )\n}\n\nconst clearCartItem = (cartItems, cartItemToClear) => {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n}\n\nexport const CartContext = createContext({\n    isCartOpen : false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    removeItemFromCart: () => {},\n    clearItemFromCart: () => {},\n    cardCount: 0\n})\n\nexport const CartProvider = ({children}) =>  {\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n    const [cartCount, setCartCount] = useState(0);\n\n    useEffect(()=>{\n        const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n        setCartCount(newCartCount);\n    },[cartItems])\n\n    //we receive a product when clicked\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    }\n\n    const removeItemFromCart = (cartItemToRemove) => {\n        setCartItems(removeCartItem(cartItems, cartItemToRemove));\n    }\n\n    const clearItemFromCart = (cartItemToClear) => {\n        setCartItems(clearCartItem(cartItems, cartItemToClear));\n    }\n\n    const value = {isCartOpen, setIsCartOpen, addItemToCart, cartItems, \n        cartCount, removeItemFromCart, clearItemFromCart};  \n    return (\n        <CartContext.Provider value={value} >{children}</CartContext.Provider>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}