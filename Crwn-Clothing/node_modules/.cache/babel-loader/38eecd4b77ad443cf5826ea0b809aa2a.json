{"ast":null,"code":"var _jsxFileName = \"/home/pavan/VISHNU/GIT/ReactJS/Crwn-Clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if product exists in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if yes, increment quantity, if no, add.\n  //return new array with modified cart items/ new cart item\n  // [{...productToAdd, quantity: 1}]\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {}\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]); //we receive a product when clicked\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"X7m0wQJ+zlrOgjCUh5u2IGGBLdE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","CartProvider","children","setCartItems","value"],"sources":["/home/pavan/VISHNU/GIT/ReactJS/Crwn-Clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n\n    //find if product exists in the cart\n    const existingCartItem = cartItems.find((cartItem) => \n        (cartItem.id === productToAdd.id));\n    //if yes, increment quantity, if no, add.\n\n    //return new array with modified cart items/ new cart item\n    // [{...productToAdd, quantity: 1}]\n    return [...cartItems, {...productToAdd, quantity:1}];\n}\n\nexport const CartContext = createContext({\n    isCartOpen : false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {}\n})\n\nexport const CartProvider = ({children}) =>  {\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n\n    //we receive a product when clicked\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    }\n\n    const value = {isCartOpen, setIsCartOpen};  \n    return (\n        <CartContext.Provider value={value} >{children}</CartContext.Provider>\n    )\n}\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;EAE7C;EACA,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IACnCA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EADT,CAAzB,CAH6C,CAK7C;EAEA;EACA;;EACA,OAAO,CAAC,GAAGL,SAAJ,EAAe,EAAC,GAAGC,YAAJ;IAAkBK,QAAQ,EAAC;EAA3B,CAAf,CAAP;AACH,CAVD;;AAYA,OAAO,MAAMC,WAAW,gBAAGV,aAAa,CAAC;EACrCW,UAAU,EAAG,KADwB;EAErCC,aAAa,EAAE,MAAM,CAAE,CAFc;EAGrCT,SAAS,EAAE,EAH0B;EAIrCU,aAAa,EAAE,MAAM,CAAE;AAJc,CAAD,CAAjC;AAOP,OAAO,MAAMC,YAAY,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAACC;EAAD,CAAgB;EACzC,MAAM,CAACJ,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACE,SAAD,EAAYa,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C,CAFyC,CAIzC;;EACA,MAAMY,aAAa,GAAIT,YAAD,IAAkB;IACpCY,YAAY,CAACd,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;EACH,CAFD;;EAIA,MAAMa,KAAK,GAAG;IAACN,UAAD;IAAaC;EAAb,CAAd;EACA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEK,KAA7B;IAAA,UAAsCF;EAAtC;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAbM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}